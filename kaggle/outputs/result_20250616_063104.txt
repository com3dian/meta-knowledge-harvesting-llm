Entities: defaultdict(<class 'list'>, {'Microservices Architecture': [{'entity_name': 'Microservices Architecture', 'entity_type': 'Software or Computational Method', 'description': 'Microservices architecture advocates decentralized data ownership for building software systems.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Database Per Service Pattern': [{'entity_name': 'Database Per Service Pattern', 'entity_type': 'Software or Computational Method', 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Microservices': [{'entity_name': 'Microservices', 'entity_type': 'Software or Computational Method', 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Database': [{'entity_name': 'Database', 'entity_type': 'Software or Computational Method', 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Containerization': [{'entity_name': 'Containerization', 'entity_type': 'Software or Computational Method', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Production Environments': [{'entity_name': 'Production Environments', 'entity_type': 'Infrastructure or Equipment', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Data Persistence Issues': [{'entity_name': 'Data Persistence Issues', 'entity_type': 'Health or Disease Concept', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Security Concerns': [{'entity_name': 'Security Concerns', 'entity_type': 'Health or Disease Concept', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Database Containers': [{'entity_name': 'Database Containers', 'entity_type': 'Software or Computational Method', 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Cloud Database Services': [{'entity_name': 'Cloud Database Services', 'entity_type': 'Software or Computational Method', 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Container-Native Data Persistence': [{'entity_name': 'Container-Native Data Persistence', 'entity_type': 'Software or Computational Method', 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Statelessness-Dominant Application Scenarios': [{'entity_name': 'Statelessness-Dominant Application Scenarios', 'entity_type': 'Scientific Method', 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Stateless Data Access': [{'entity_name': 'Stateless Data Access', 'entity_type': 'Software or Computational Method', 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Stateful Data Processing': [{'entity_name': 'Stateful Data Processing', 'entity_type': 'Software or Computational Method', 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Stateless Microservices': [{'entity_name': 'Stateless Microservices', 'entity_type': 'Software or Computational Method', 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Prototyping': [{'entity_name': 'Prototyping', 'entity_type': 'Scientific Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Evaluating Performance': [{'entity_name': 'Evaluating Performance', 'entity_type': 'Scientific Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Real-World Microservice Applications': [{'entity_name': 'Real-World Microservice Applications', 'entity_type': 'Software or Computational Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Fully Containerized Microservices': [{'entity_name': 'Fully Containerized Microservices', 'entity_type': 'Software or Computational Method', 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Software Micro-Optimization': [{'entity_name': 'Software Micro-Optimization', 'entity_type': 'Scientific Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Microservices_Architecture': [{'entity_name': 'Microservices_Architecture', 'entity_type': 'Microservices Architecture', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Software_Systems': [{'entity_name': 'Software_Systems', 'entity_type': 'Software Systems', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Database_per_Service_Pattern': [{'entity_name': 'Database_per_Service_Pattern', 'entity_type': 'Database per Service Pattern', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Microservice': [{'entity_name': 'Microservice', 'entity_type': 'Microservice', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Production_Environments': [{'entity_name': 'Production_Environments', 'entity_type': 'Production Environments', 'description': 'Infrastructure or Equipment', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Database_Containers': [{'entity_name': 'Database_Containers', 'entity_type': 'Database Containers', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Cloud_Database_Services': [{'entity_name': 'Cloud_Database_Services', 'entity_type': 'Cloud Database Services', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'On_premises_Microservice_Implementation': [{'entity_name': 'On_premises_Microservice_Implementation', 'entity_type': 'On-premises Microservice Implementation', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Container_Native_Data_Persistence': [{'entity_name': 'Container_Native_Data_Persistence', 'entity_type': 'Container-Native Data Persistence', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Stateless_Data_Access': [{'entity_name': 'Stateless_Data_Access', 'entity_type': 'Stateless Data Access', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Stateful_Data_Processing': [{'entity_name': 'Stateful_Data_Processing', 'entity_type': 'Stateful Data Processing', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Stateless_Microservices': [{'entity_name': 'Stateless_Microservices', 'entity_type': 'Stateless Microservices', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Performance_Evaluation': [{'entity_name': 'Performance_Evaluation', 'entity_type': 'Performance Evaluation', 'description': 'Scientific Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Real_World_Microservice_Applications': [{'entity_name': 'Real_World_Microservice_Applications', 'entity_type': 'Real-World Microservice Applications', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Fully_Containerized_Microservices': [{'entity_name': 'Fully_Containerized_Microservices', 'entity_type': 'Fully Containerized Microservices', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Operation_Side_Micro_optimization': [{'entity_name': 'Operation_Side_Micro_optimization', 'entity_type': 'Operation-Side Micro-optimization', 'description': 'Scientific Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Software_Micro_optimization': [{'entity_name': 'Software_Micro_optimization', 'entity_type': 'Software Micro-optimization', 'description': 'Software or Computational Method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Decentralized Data Ownership': [{'entity_name': 'Decentralized Data Ownership', 'entity_type': 'Software or Computational Method', 'description': 'Microservices architecture advocates decentralized data ownership for building software systems.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Software Systems': [{'entity_name': 'Software Systems', 'entity_type': 'Software or Computational Method', 'description': 'Microservices architecture advocates decentralized data ownership for building software systems.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Microservice Implementation': [{'entity_name': 'Microservice Implementation', 'entity_type': 'Software or Computational Method', 'description': 'When implementing microservices in practice, however, there seems to be a paradox: The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Microservice Component': [{'entity_name': 'Microservice Component', 'entity_type': 'Software or Computational Method', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Dangling Volumes': [{'entity_name': 'Dangling Volumes', 'entity_type': 'Health or Disease Concept', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'On-Premises Microservice Implementation': [{'entity_name': 'On-Premises Microservice Implementation', 'entity_type': 'Software or Computational Method', 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Resilient Database Containers': [{'entity_name': 'Resilient Database Containers', 'entity_type': 'Software or Computational Method', 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Reading': [{'entity_name': 'Reading', 'entity_type': 'Software or Computational Method', 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Creating, Updating, And Deleting': [{'entity_name': 'Creating, Updating, And Deleting', 'entity_type': 'Software or Computational Method', 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Research': [{'entity_name': 'Research', 'entity_type': 'Scientific Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Validation': [{'entity_name': 'Validation', 'entity_type': 'Scientific Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Prototyping The Solution': [{'entity_name': 'Prototyping The Solution', 'entity_type': 'Scientific Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Two Real-World Microservice Applications': [{'entity_name': 'Two Real-World Microservice Applications', 'entity_type': 'Software or Computational Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Validation Results': [{'entity_name': 'Validation Results', 'entity_type': 'Scientific Method', 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Feasibility': [{'entity_name': 'Feasibility', 'entity_type': 'Health or Disease Concept', 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Usability': [{'entity_name': 'Usability', 'entity_type': 'Health or Disease Concept', 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Efficiency': [{'entity_name': 'Efficiency', 'entity_type': 'Health or Disease Concept', 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Operation-Side Micro-Optimization': [{'entity_name': 'Operation-Side Micro-Optimization', 'entity_type': 'Scientific Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'Individual Microservices': [{'entity_name': 'Individual Microservices', 'entity_type': 'Software or Computational Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], 'New Research Opportunities': [{'entity_name': 'New Research Opportunities', 'entity_type': 'Scientific Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}]})
Relationships: defaultdict(<class 'list'>, {('Database Per Service Pattern', 'Microservices Architecture'): [{'src_id': 'Microservices Architecture', 'tgt_id': 'Database Per Service Pattern', 'weight': 8.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'architecture pattern, data ownership', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Database Per Service Pattern', 'Microservices'): [{'src_id': 'Database Per Service Pattern', 'tgt_id': 'Microservices', 'weight': 9.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'component management, data handling', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Database', 'Database Per Service Pattern'): [{'src_id': 'Database Per Service Pattern', 'tgt_id': 'Database', 'weight': 9.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'component integration, data storage', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Microservices'): [{'src_id': 'Containerization', 'tgt_id': 'Microservices', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'implementation technology, software deployment', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Database'): [{'src_id': 'Containerization', 'tgt_id': 'Database', 'weight': 8.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'compatibility issues, deployment challenges', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Production Environments'): [{'src_id': 'Containerization', 'tgt_id': 'Production Environments', 'weight': 8.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'deployment context, environment suitability', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Data Persistence Issues', 'Database'): [{'src_id': 'Database', 'tgt_id': 'Data Persistence Issues', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'technical problems, data management', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Database', 'Security Concerns'): [{'src_id': 'Database', 'tgt_id': 'Security Concerns', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'technical problems, data security', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Cloud Database Services', 'Database Containers'): [{'src_id': 'Database Containers', 'tgt_id': 'Cloud Database Services', 'weight': 8.0, 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'keywords': 'replacement, alternative solutions', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Database Containers'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Database Containers', 'weight': 10.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'solution, resilience', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Production Environments'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Production Environments', 'weight': 8.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'deployment context, environment suitability', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Stateless Data Access'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Stateless Data Access', 'weight': 7.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'data handling, distinction', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Stateful Data Processing'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Stateful Data Processing', 'weight': 7.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'data handling, distinction', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Stateless Microservices'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Stateless Microservices', 'weight': 9.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'development goal, application design', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Prototyping'): [{'src_id': 'Prototyping', 'tgt_id': 'Container-Native Data Persistence', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation method, solution development', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Evaluating Performance'): [{'src_id': 'Evaluating Performance', 'tgt_id': 'Container-Native Data Persistence', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation method, performance assessment', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Real-World Microservice Applications'): [{'src_id': 'Real-World Microservice Applications', 'tgt_id': 'Container-Native Data Persistence', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'application context, validation', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}, {'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Real-World Microservice Applications', 'weight': 9.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'application, real-world scenario', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Fully Containerized Microservices', 'Production Environments'): [{'src_id': 'Fully Containerized Microservices', 'tgt_id': 'Production Environments', 'weight': 9.0, 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'keywords': 'deployment viability, industrial application', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Microservices', 'Software Micro-Optimization'): [{'src_id': 'Software Micro-Optimization', 'tgt_id': 'Microservices', 'weight': 7.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'research scope, optimization focus', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Statelessness-Dominant Application Scenarios'): [{'src_id': 'Statelessness-Dominant Application Scenarios', 'tgt_id': 'Container-Native Data Persistence', 'weight': 9.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'context, applicability', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Microservices Architecture', 'Software Systems'): [{'src_id': 'Microservices Architecture', 'tgt_id': 'Software Systems', 'weight': 8.0, 'description': 'Microservices architecture advocates decentralized data ownership for building software systems.', 'keywords': 'architecture, system design', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Database per Service Pattern', 'Microservice'): [{'src_id': 'Database per Service Pattern', 'tgt_id': 'Microservice', 'weight': 9.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'design pattern, functionality', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Database', 'Microservice'): [{'src_id': 'Microservice', 'tgt_id': 'Database', 'weight': 8.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'data management, ownership', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Microservice'): [{'src_id': 'Containerization', 'tgt_id': 'Microservice', 'weight': 7.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'technology, implementation', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Performance Evaluation'): [{'src_id': 'Performance Evaluation', 'tgt_id': 'Container-Native Data Persistence', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation, research method', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Microservice', 'Operation-Side Micro-optimization'): [{'src_id': 'Operation-Side Micro-optimization', 'tgt_id': 'Microservice', 'weight': 7.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'optimization, focus', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Operation-Side Micro-optimization', 'Software Micro-optimization'): [{'src_id': 'Operation-Side Micro-optimization', 'tgt_id': 'Software Micro-optimization', 'weight': 9.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'scope expansion, classification', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Decentralized Data Ownership', 'Microservices Architecture'): [{'src_id': 'Microservices Architecture', 'tgt_id': 'Decentralized Data Ownership', 'weight': 9.0, 'description': 'Microservices architecture advocates decentralized data ownership for building software systems.', 'keywords': 'advocacy, principle', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Database Per Service Pattern', 'Microservice'): [{'src_id': 'Database Per Service Pattern', 'tgt_id': 'Microservice', 'weight': 9.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'pattern implementation, data management', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Microservice Implementation'): [{'src_id': 'Containerization', 'tgt_id': 'Microservice Implementation', 'weight': 7.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'implementation technology, suitability', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Microservice Component'): [{'src_id': 'Containerization', 'tgt_id': 'Microservice Component', 'weight': 7.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'compatibility issue, component unsuitability', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Database', 'Microservice Component'): [{'src_id': 'Microservice Component', 'tgt_id': 'Database', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'component type, identification', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Data Persistence Issues'): [{'src_id': 'Containerization', 'tgt_id': 'Data Persistence Issues', 'weight': 8.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'causation, problem source', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Dangling Volumes', 'Data Persistence Issues'): [{'src_id': 'Data Persistence Issues', 'tgt_id': 'Dangling Volumes', 'weight': 7.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'example, sub-type', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Containerization', 'Security Concerns'): [{'src_id': 'Containerization', 'tgt_id': 'Security Concerns', 'weight': 8.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'causation, problem source', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Cloud Database Services', 'On-Premises Microservice Implementation'): [{'src_id': 'Cloud Database Services', 'tgt_id': 'On-Premises Microservice Implementation', 'weight': 6.0, 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'keywords': 'contrast, excluded consideration', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Resilient Database Containers'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Resilient Database Containers', 'weight': 10.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'solution, enablement', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Reading', 'Stateless Data Access'): [{'src_id': 'Stateless Data Access', 'tgt_id': 'Reading', 'weight': 9.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'example, definition', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Creating, Updating, And Deleting', 'Stateful Data Processing'): [{'src_id': 'Stateful Data Processing', 'tgt_id': 'Creating, Updating, And Deleting', 'weight': 9.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'example, definition', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Research', 'Validation'): [{'src_id': 'Research', 'tgt_id': 'Validation', 'weight': 9.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'research focus, methodology', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Prototyping The Solution', 'Validation'): [{'src_id': 'Validation', 'tgt_id': 'Prototyping The Solution', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation method, experimental approach', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Evaluating Performance', 'Validation'): [{'src_id': 'Validation', 'tgt_id': 'Evaluating Performance', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation method, evaluation metric', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Two Real-World Microservice Applications', 'Validation'): [{'src_id': 'Validation', 'tgt_id': 'Two Real-World Microservice Applications', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation method, application context', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Two Real-World Microservice Applications'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Two Real-World Microservice Applications', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'application, testing', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Feasibility', 'Validation Results'): [{'src_id': 'Validation Results', 'tgt_id': 'Feasibility', 'weight': 9.0, 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'keywords': 'outcome, proof', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Usability', 'Validation Results'): [{'src_id': 'Validation Results', 'tgt_id': 'Usability', 'weight': 9.0, 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'keywords': 'outcome, proof', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Efficiency', 'Validation Results'): [{'src_id': 'Validation Results', 'tgt_id': 'Efficiency', 'weight': 9.0, 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'keywords': 'outcome, proof', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Fully Containerized Microservices', 'Validation Results'): [{'src_id': 'Validation Results', 'tgt_id': 'Fully Containerized Microservices', 'weight': 9.0, 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'keywords': 'evaluated subject, positive outcome', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Operation-Side Micro-Optimization', 'Research'): [{'src_id': 'Research', 'tgt_id': 'Operation-Side Micro-Optimization', 'weight': 8.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'contribution, focus', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Individual Microservices', 'Operation-Side Micro-Optimization'): [{'src_id': 'Operation-Side Micro-Optimization', 'tgt_id': 'Individual Microservices', 'weight': 9.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'application scope, optimization target', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('Operation-Side Micro-Optimization', 'Software Micro-Optimization'): [{'src_id': 'Operation-Side Micro-Optimization', 'tgt_id': 'Software Micro-Optimization', 'weight': 7.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'scope expansion, conceptual link', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}], ('New Research Opportunities', 'Research'): [{'src_id': 'Research', 'tgt_id': 'New Research Opportunities', 'weight': 7.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'outcome, future direction', 'source_id': 'chunk-e4b793a8e08d3e9b90d331ec8ee089cc', 'file_path': 'example.txt'}]})
