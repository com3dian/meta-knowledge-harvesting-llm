Entities: defaultdict(<class 'list'>, {'Microservices Architecture': [{'entity_name': 'Microservices Architecture', 'entity_type': 'Software or Computational Method', 'description': 'Microservices architecture advocates decentralized data ownership for building software systems.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Database Per Service Pattern': [{'entity_name': 'Database Per Service Pattern', 'entity_type': 'Software or Computational Method', 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Containerization': [{'entity_name': 'Containerization', 'entity_type': 'Software or Computational Method', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Database Containers': [{'entity_name': 'Database Containers', 'entity_type': 'Software or Computational Method', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Cloud Database Services': [{'entity_name': 'Cloud Database Services', 'entity_type': 'Software or Computational Method', 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Container-Native Data Persistence': [{'entity_name': 'Container-Native Data Persistence', 'entity_type': 'Scientific Method', 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Stateless Data Access (i.e., reading)': [{'entity_name': 'Stateless Data Access (i.e., reading)', 'entity_type': 'Scientific Method', 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Stateful Data Processing (i.e., creating, updating, and deleting)': [{'entity_name': 'Stateful Data Processing (i.e., creating, updating, and deleting)', 'entity_type': 'Scientific Method', 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Micro-Optimization': [{'entity_name': 'Micro-Optimization', 'entity_type': 'Scientific Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Software Micro-Optimization': [{'entity_name': 'Software Micro-Optimization', 'entity_type': 'Scientific Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Software Product Lines (SPLs)': [{'entity_name': 'Software Product Lines (SPLs)', 'entity_type': 'Software or Computational Method', 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Business Process Management (BPM)': [{'entity_name': 'Business Process Management (BPM)', 'entity_type': 'Software or Computational Method', 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Security Requirements Engineering (SRE) Techniques': [{'entity_name': 'Security Requirements Engineering (SRE) Techniques', 'entity_type': 'Scientific Method', 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Method To Support Developers To Incorporate Security In The Design Of SPLs Systems': [{'entity_name': 'Method To Support Developers To Incorporate Security In The Design Of SPLs Systems', 'entity_type': 'Scientific Method', 'description': 'Results: We provide a method to support developers to incorporate security in the design of SPLs systems.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs': [{'entity_name': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'entity_type': 'Scientific Method', 'description': 'To avoid costly and extensive re-design of SPLs and BPs, we propose a methodology to analyse the strategic change impact of SPLs and BPs.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Security Constraints': [{'entity_name': 'Security Constraints', 'entity_type': 'Health or Disease Concept', 'description': 'This methodology constitutes a guideline to trace back the impact of change respecting security constraints of SPLs and BPs on different abstraction levels.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Database per Service Pattern': [{'entity_name': 'Database per Service Pattern', 'entity_type': 'Database per Service Pattern', 'description': 'Software or Computational Method', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Stateless Microservices': [{'entity_name': 'Stateless Microservices', 'entity_type': 'Stateless Microservices', 'description': 'Software or Computational Method', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Software Micro-optimization': [{'entity_name': 'Software Micro-optimization', 'entity_type': 'Software Micro-optimization', 'description': 'Scientific Method', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Software Engineering': [{'entity_name': 'Software Engineering', 'entity_type': 'Software Engineering', 'description': 'Scientific Method', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Security Requirements Engineering (SRE)': [{'entity_name': 'Security Requirements Engineering (SRE)', 'entity_type': 'Security Requirements Engineering (SRE)', 'description': 'Software or Computational Method', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Methodology for Strategic Change Impact Analysis': [{'entity_name': 'Methodology for Strategic Change Impact Analysis', 'entity_type': 'Methodology for Strategic Change Impact Analysis', 'description': 'Scientific Method', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Microservice': [{'entity_name': 'Microservice', 'entity_type': 'Software or Computational Method', 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Database': [{'entity_name': 'Database', 'entity_type': 'Software or Computational Method', 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Production Environments': [{'entity_name': 'Production Environments', 'entity_type': 'Infrastructure or Equipment', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Data Persistence Issues': [{'entity_name': 'Data Persistence Issues', 'entity_type': 'Health or Disease Concept', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Dangling Volumes': [{'entity_name': 'Dangling Volumes', 'entity_type': 'Health or Disease Concept', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Security Concerns': [{'entity_name': 'Security Concerns', 'entity_type': 'Health or Disease Concept', 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'On-Premises Microservice Implementation': [{'entity_name': 'On-Premises Microservice Implementation', 'entity_type': 'Software or Computational Method', 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Statelessness-Dominant Application Scenarios': [{'entity_name': 'Statelessness-Dominant Application Scenarios', 'entity_type': 'Scientific Method', 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Resilient Database Containers': [{'entity_name': 'Resilient Database Containers', 'entity_type': 'Software or Computational Method', 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Prototyping The Solution': [{'entity_name': 'Prototyping The Solution', 'entity_type': 'Scientific Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Evaluating Its Performance': [{'entity_name': 'Evaluating Its Performance', 'entity_type': 'Scientific Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Real-World Microservice Applications': [{'entity_name': 'Real-World Microservice Applications', 'entity_type': 'Software or Computational Method', 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Industrial Perspective': [{'entity_name': 'Industrial Perspective', 'entity_type': 'Demographic Group', 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Fully Containerized Microservices': [{'entity_name': 'Fully Containerized Microservices', 'entity_type': 'Software or Computational Method', 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Academic Perspective': [{'entity_name': 'Academic Perspective', 'entity_type': 'Demographic Group', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Operation-Side Micro-Optimization': [{'entity_name': 'Operation-Side Micro-Optimization', 'entity_type': 'Scientific Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Research Opportunities': [{'entity_name': 'Research Opportunities', 'entity_type': 'Scientific Method', 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Security': [{'entity_name': 'Security', 'entity_type': 'Health or Disease Concept', 'description': 'Security is becoming increasingly important during software engineering.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Software Developers': [{'entity_name': 'Software Developers', 'entity_type': 'Demographic Group', 'description': 'Software developers should be able to adapt and deploy secure systems in a continuously changing execution context.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Secure Systems': [{'entity_name': 'Secure Systems', 'entity_type': 'Software or Computational Method', 'description': 'Software developers should be able to adapt and deploy secure systems in a continuously changing execution context.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Execution Context': [{'entity_name': 'Execution Context', 'entity_type': 'Scientific Method', 'description': 'Software developers should be able to adapt and deploy secure systems in a continuously changing execution context.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Security Requirements': [{'entity_name': 'Security Requirements', 'entity_type': 'Health or Disease Concept', 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Re-Design Of SPLs And BPs': [{'entity_name': 'Re-Design Of SPLs And BPs', 'entity_type': 'Scientific Method', 'description': 'To avoid costly and extensive re-design of SPLs and BPs, we propose a methodology to analyse the strategic change impact of SPLs and BPs.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Organizational Strategy': [{'entity_name': 'Organizational Strategy', 'entity_type': 'Scientific Method', 'description': 'The methodology supports the alignment of organizational strategy and execution level with an emphasis to security.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Execution Level': [{'entity_name': 'Execution Level', 'entity_type': 'Scientific Method', 'description': 'The methodology supports the alignment of organizational strategy and execution level with an emphasis to security.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], 'Abstraction Levels': [{'entity_name': 'Abstraction Levels', 'entity_type': 'Scientific Method', 'description': 'This methodology constitutes a guideline to trace back the impact of change respecting security constraints of SPLs and BPs on different abstraction levels.', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}]})
Relationships: defaultdict(<class 'list'>, {('Database Per Service Pattern', 'Microservices Architecture'): [{'src_id': 'Microservices Architecture', 'tgt_id': 'Database Per Service Pattern', 'weight': 8.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'architectural pattern, component', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Containerization', 'Microservices Architecture'): [{'src_id': 'Containerization', 'tgt_id': 'Microservices Architecture', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'implementation technology, deployment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}, {'src_id': 'Microservices Architecture', 'tgt_id': 'Containerization', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'implementation technology, software deployment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Containerization', 'Database Containers'): [{'src_id': 'Containerization', 'tgt_id': 'Database Containers', 'weight': 8.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'component, technology application', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Cloud Database Services', 'Database Containers'): [{'src_id': 'Database Containers', 'tgt_id': 'Cloud Database Services', 'weight': 7.0, 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'keywords': 'replacement, alternative', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Database Containers'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Database Containers', 'weight': 9.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'solution, enablement', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Stateless Data Access (i.e., reading)'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Stateless Data Access (i.e., reading)', 'weight': 8.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'distinction, component', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Stateful Data Processing (i.e., creating, updating, and deleting)'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Stateful Data Processing (i.e., creating, updating, and deleting)', 'weight': 8.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'distinction, component', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Microservices Architecture'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Microservices Architecture', 'weight': 7.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'development, application', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Micro-Optimization', 'Software Micro-Optimization'): [{'src_id': 'Micro-Optimization', 'tgt_id': 'Software Micro-Optimization', 'weight': 7.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'scope expansion, research focus', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Business Process Management (BPM)', 'Software Product Lines (SPLs)'): [{'src_id': 'Software Product Lines (SPLs)', 'tgt_id': 'Business Process Management (BPM)', 'weight': 8.0, 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'keywords': 'combined techniques, methodology', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Security Requirements Engineering (SRE) Techniques', 'Software Product Lines (SPLs)'): [{'src_id': 'Software Product Lines (SPLs)', 'tgt_id': 'Security Requirements Engineering (SRE) Techniques', 'weight': 8.0, 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'keywords': 'combined techniques, security integration', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Business Process Management (BPM)', 'Security Requirements Engineering (SRE) Techniques'): [{'src_id': 'Business Process Management (BPM)', 'tgt_id': 'Security Requirements Engineering (SRE) Techniques', 'weight': 8.0, 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'keywords': 'combined techniques, security integration', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Method To Support Developers To Incorporate Security In The Design Of SPLs Systems', 'Software Product Lines (SPLs)'): [{'src_id': 'Method To Support Developers To Incorporate Security In The Design Of SPLs Systems', 'tgt_id': 'Software Product Lines (SPLs)', 'weight': 9.0, 'description': 'Results: We provide a method to support developers to incorporate security in the design of SPLs systems.', 'keywords': 'design support, security integration', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'Software Product Lines (SPLs)'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Software Product Lines (SPLs)', 'weight': 9.0, 'description': 'To avoid costly and extensive re-design of SPLs and BPs, we propose a methodology to analyse the strategic change impact of SPLs and BPs.', 'keywords': 'impact analysis, design optimization', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Business Process Management (BPM)', 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Business Process Management (BPM)', 'weight': 9.0, 'description': 'To avoid costly and extensive re-design of SPLs and BPs, we propose a methodology to analyse the strategic change impact of SPLs and BPs.', 'keywords': 'impact analysis, design optimization', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'Security Constraints'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Security Constraints', 'weight': 8.0, 'description': 'This methodology constitutes a guideline to trace back the impact of change respecting security constraints of SPLs and BPs on different abstraction levels.', 'keywords': 'security integration, impact analysis', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Database per Service Pattern', 'Microservices Architecture'): [{'src_id': 'Microservices Architecture', 'tgt_id': 'Database per Service Pattern', 'weight': 8.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'architecture pattern, design', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Stateless Microservices'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Stateless Microservices', 'weight': 8.0, 'description': 'In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications.', 'keywords': 'development goal, application', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Security', 'Software Engineering'): [{'src_id': 'Software Engineering', 'tgt_id': 'Security', 'weight': 7.0, 'description': 'Security is becoming increasingly important during software engineering.', 'keywords': 'importance, focus area', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Security Requirements Engineering (SRE)', 'Software Product Lines (SPLs)'): [{'src_id': 'Software Product Lines (SPLs)', 'tgt_id': 'Security Requirements Engineering (SRE)', 'weight': 8.0, 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'keywords': 'technique application, integration', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Business Process Management (BPM)', 'Security Requirements Engineering (SRE)'): [{'src_id': 'Business Process Management (BPM)', 'tgt_id': 'Security Requirements Engineering (SRE)', 'weight': 8.0, 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'keywords': 'technique application, integration', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Methodology for Strategic Change Impact Analysis', 'Software Product Lines (SPLs)'): [{'src_id': 'Methodology for Strategic Change Impact Analysis', 'tgt_id': 'Software Product Lines (SPLs)', 'weight': 9.0, 'description': 'To avoid costly and extensive re-design of SPLs and BPs, we propose a methodology to analyse the strategic change impact of SPLs and BPs.', 'keywords': 'analysis, impact assessment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Business Process Management (BPM)', 'Methodology for Strategic Change Impact Analysis'): [{'src_id': 'Methodology for Strategic Change Impact Analysis', 'tgt_id': 'Business Process Management (BPM)', 'weight': 9.0, 'description': 'To avoid costly and extensive re-design of SPLs and BPs, we propose a methodology to analyse the strategic change impact of SPLs and BPs.', 'keywords': 'analysis, impact assessment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Methodology for Strategic Change Impact Analysis', 'Security'): [{'src_id': 'Methodology for Strategic Change Impact Analysis', 'tgt_id': 'Security', 'weight': 9.0, 'description': 'The methodology supports the alignment of organizational strategy and execution level with an emphasis to security.', 'keywords': 'security integration, guideline', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Database Per Service Pattern', 'Microservice'): [{'src_id': 'Database Per Service Pattern', 'tgt_id': 'Microservice', 'weight': 9.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'pattern application, component responsibility', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Database', 'Microservice'): [{'src_id': 'Microservice', 'tgt_id': 'Database', 'weight': 9.0, 'description': 'Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality.', 'keywords': 'component ownership, data handling', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Containerization', 'Microservice'): [{'src_id': 'Containerization', 'tgt_id': 'Microservice', 'weight': 8.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'implementation technology, suitability', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Database Containers', 'Production Environments'): [{'src_id': 'Database Containers', 'tgt_id': 'Production Environments', 'weight': 8.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'deployment context, suitability challenge', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Data Persistence Issues', 'Database Containers'): [{'src_id': 'Database Containers', 'tgt_id': 'Data Persistence Issues', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'associated problems, unsuitability factor', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Dangling Volumes', 'Data Persistence Issues'): [{'src_id': 'Data Persistence Issues', 'tgt_id': 'Dangling Volumes', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'example, specific problem', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Database Containers', 'Security Concerns'): [{'src_id': 'Database Containers', 'tgt_id': 'Security Concerns', 'weight': 9.0, 'description': 'The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns.', 'keywords': 'associated problems, unsuitability factor', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Cloud Database Services', 'On-Premises Microservice Implementation'): [{'src_id': 'On-Premises Microservice Implementation', 'tgt_id': 'Cloud Database Services', 'weight': 7.0, 'description': 'As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration.', 'keywords': 'consideration exclusion, deployment approach', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Statelessness-Dominant Application Scenarios'): [{'src_id': 'Statelessness-Dominant Application Scenarios', 'tgt_id': 'Container-Native Data Persistence', 'weight': 8.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'solution context, applicability', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Resilient Database Containers'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Resilient Database Containers', 'weight': 9.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'solution aim, enablement', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Production Environments'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Production Environments', 'weight': 8.0, 'description': 'After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production.', 'keywords': 'solution context, deployment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Prototyping The Solution'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Prototyping The Solution', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation method, solution development', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Evaluating Its Performance'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Evaluating Its Performance', 'weight': 8.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'validation method, performance assessment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Container-Native Data Persistence', 'Real-World Microservice Applications'): [{'src_id': 'Container-Native Data Persistence', 'tgt_id': 'Real-World Microservice Applications', 'weight': 9.0, 'description': 'In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications.', 'keywords': 'application, validation context', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Fully Containerized Microservices', 'Industrial Perspective'): [{'src_id': 'Industrial Perspective', 'tgt_id': 'Fully Containerized Microservices', 'weight': 8.0, 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'keywords': 'evaluation perspective, validation outcome', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Fully Containerized Microservices', 'Production Environments'): [{'src_id': 'Fully Containerized Microservices', 'tgt_id': 'Production Environments', 'weight': 9.0, 'description': 'From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations.', 'keywords': 'suitability, deployment context', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Academic Perspective', 'Operation-Side Micro-Optimization'): [{'src_id': 'Academic Perspective', 'tgt_id': 'Operation-Side Micro-Optimization', 'weight': 8.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'research focus, academic contribution', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Operation-Side Micro-Optimization', 'Software Micro-Optimization'): [{'src_id': 'Operation-Side Micro-Optimization', 'tgt_id': 'Software Micro-Optimization', 'weight': 8.0, 'description': "From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of 'software micro-optimization' and reveals new research opportunities.", 'keywords': 'scope expansion, specific focus', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Secure Systems', 'Software Developers'): [{'src_id': 'Software Developers', 'tgt_id': 'Secure Systems', 'weight': 8.0, 'description': 'Software developers should be able to adapt and deploy secure systems in a continuously changing execution context.', 'keywords': 'developer role, system deployment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Execution Context', 'Secure Systems'): [{'src_id': 'Secure Systems', 'tgt_id': 'Execution Context', 'weight': 7.0, 'description': 'Software developers should be able to adapt and deploy secure systems in a continuously changing execution context.', 'keywords': 'system adaptation, deployment environment', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Security Requirements', 'Security Requirements Engineering (SRE) Techniques'): [{'src_id': 'Security Requirements Engineering (SRE) Techniques', 'tgt_id': 'Security Requirements', 'weight': 9.0, 'description': 'We use Software Product Lines (SPLs), Business Process Management (BPM) and Security Requirements Engineering (SRE) techniques for anticipating the uncertainty and the changes of security requirements.', 'keywords': 'engineering process, requirement management', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Method To Support Developers To Incorporate Security In The Design Of SPLs Systems', 'Software Developers'): [{'src_id': 'Method To Support Developers To Incorporate Security In The Design Of SPLs Systems', 'tgt_id': 'Software Developers', 'weight': 9.0, 'description': 'Results: We provide a method to support developers to incorporate security in the design of SPLs systems.', 'keywords': 'support, development assistance', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Method To Support Developers To Incorporate Security In The Design Of SPLs Systems', 'Security'): [{'src_id': 'Method To Support Developers To Incorporate Security In The Design Of SPLs Systems', 'tgt_id': 'Security', 'weight': 9.0, 'description': 'Results: We provide a method to support developers to incorporate security in the design of SPLs systems.', 'keywords': 'incorporation, design focus', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'Re-Design Of SPLs And BPs'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Re-Design Of SPLs And BPs', 'weight': 8.0, 'description': 'To avoid costly and extensive re-design of SPLs and BPs, we propose a methodology to analyse the strategic change impact of SPLs and BPs.', 'keywords': 'avoidance, optimization', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'Organizational Strategy'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Organizational Strategy', 'weight': 8.0, 'description': 'The methodology supports the alignment of organizational strategy and execution level with an emphasis to security.', 'keywords': 'alignment, strategic support', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Execution Level', 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Execution Level', 'weight': 8.0, 'description': 'The methodology supports the alignment of organizational strategy and execution level with an emphasis to security.', 'keywords': 'alignment, operational support', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'Security'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Security', 'weight': 9.0, 'description': 'The methodology supports the alignment of organizational strategy and execution level with an emphasis to security.', 'keywords': 'emphasis, integration', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}], ('Abstraction Levels', 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs'): [{'src_id': 'Methodology To Analyse The Strategic Change Impact Of SPLs And BPs', 'tgt_id': 'Abstraction Levels', 'weight': 7.0, 'description': 'This methodology constitutes a guideline to trace back the impact of change respecting security constraints of SPLs and BPs on different abstraction levels.', 'keywords': 'impact tracing, design context', 'source_id': 'chunk-7bdfa1c4b9f05e4598c29652e0aa978a', 'file_path': 'example.txt'}]})
